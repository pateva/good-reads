@page
@model GoodReads.Pages.Authors.IndexModel

@{
    ViewData["Title"] = "Authors";
}
<div class="d-flex justify-content-between align-items-center">
    <h2>Authors</h2>
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addAuthorModal">
        Add Author
    </button>
</div>
<hr />

<!-- todo add a serach by name-->
<div class="row">
    @foreach (var author in Model.Authors)
    {
        <div class="col-md-4 mb-3">
            <a class="btn btn-outline-primary w-100" asp-page="/authors/details" asp-route-id="@author.Id">
                @($"{author.FirstName} {author.LastName}")
            </a>
        </div>
    }
</div>


<!-- Modal -->
<div class="modal fade" id="addAuthorModal" tabindex="-1" aria-labelledby="addAuthorModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addAuthorModalLabel">Add New Author</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <!-- First Name -->
                    <div class="form-group">
                        <span class="text-danger">*</span>
                        <label asp-for="Author.FirstName" class="control-label">First Name</label>
                        <input asp-for="Author.FirstName" class="form-control" />
                        <span asp-validation-for="Author.FirstName" class="text-danger"></span>
                    </div>

                    <!-- Last Name -->
                    <div class="form-group">
                        <span class="text-danger">*</span>
                        <label asp-for="Author.LastName" class="control-label">Last Name</label>
                        <input asp-for="Author.LastName" class="form-control" />
                        <span asp-validation-for="Author.LastName" class="text-danger"></span>
                    </div>

                    <!-- Submit Button -->
                    <div class="form-group mt-3">
                        <input type="submit" value="Add Author" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@await Html.PartialAsync("_NotificationToastPartial")

<style>
    #dropzone {
        background-color: #f8f9fa;
        border: 2px dashed #0d6efd;
        border-radius: 5px;
        padding: 20px;
        transition: background-color 0.3s ease;
    }

        #dropzone:hover {
            background-color: #e9ecef;
        }
</style>

<script>
    function showNotification(message, type) {
        const toastElement = document.getElementById('notificationToast');
        const toastBody = document.querySelector('#notificationToast .toast-body');

        // Remove existing color classes
        toastElement.classList.remove('text-bg-danger', 'text-bg-success');

        // Add the appropriate color class based on the type
        if (type === 'success') {
            toastElement.classList.add('text-bg-success');
        } else {
            toastElement.classList.add('text-bg-danger');
        }

        toastBody.innerText = message || 'An error occurred.';

        const toast = new bootstrap.Toast(toastElement);
        toastElement.style.display = 'block';
        toast.show();
    }

    document.addEventListener("DOMContentLoaded", function () {
        const errorMessage = "@TempData["ErrorMessage"]";
        const successMessage = "@TempData["SuccessMessage"]";

        if (errorMessage) {
            showNotification(errorMessage, 'error');
        } else if (successMessage) {
            showNotification(successMessage, 'success');
        }
    });
</script>
