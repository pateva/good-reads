@page
@model GoodReads.Pages.Books.IndexModel

@{
    ViewData["Title"] = "Books";
}

<div class="d-flex justify-content-between align-items-center">
    <h2>All books</h2>
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addBookModal">
        Add Book
    </button>
</div>
<hr />

<!-- Search and Filter -->
<form method="get" class="mb-4">
    <div class="row g-3 align-items-center">
        <!-- Search by Book Name -->
        <div class="col-md-4">
            <input type="text" id="SearchTerm" name="SearchTerm" value="@Model.SearchTerm" class="form-control" placeholder="Enter book name..." />
        </div>

        <!-- Filter by Author -->
        <div class="col-md-3">
            <select id="AuthorId" name="AuthorId" class="form-control">
                <option value="">-- All Authors --</option>
                @foreach (var author in Model.Authors)
                {
                    <option value="@author.Id" selected="@(Model.AuthorId == author.Id)">
                        @($"{author.FirstName} {author.LastName}")
                    </option>
                }
            </select>
        </div>

        <!-- Filter by Genre -->
        <div class="col-md-3">
            <select id="GenreId" name="GenreId" class="form-control">
                <option value="">-- All Genres --</option>
                @foreach (var genre in Model.Genres)
                {
                    <option value="@genre.Id" selected="@(Model.GenreId == genre.Id)">
                        @genre.GenreName
                    </option>
                }
            </select>
        </div>

        <!-- Search Button -->
        <div class="col-md-2 d-flex align-items-end">
            <button type="submit" class="btn btn-primary w-100">Search</button>
        </div>
    </div>
</form>

<div class="row">
    @foreach (var book in Model.Books)
    {
        <div class="col-md-4 mb-3">
            <button type="button" class="btn btn-outline-primary w-100" data-bs-toggle="modal" data-bs-target="#bookModal"
                    onclick="loadBookDetails(@book.Id, '@book.Name')">
                @book.Name
            </button>
        </div>
    }
</div>

<!-- Book Modal -->
<div class="modal fade" id="bookModal" tabindex="-1" aria-labelledby="bookModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bookModalLabel">Book Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <h5 id="modalBookTitle"></h5>
                <p><strong>Authors:</strong> <span id="modalBookAuthors"></span></p>

                <!-- Form for updating book status -->
                <form method="post" asp-page-handler="UpdateStatus" id="bookStatusForm">
                    <input type="hidden" id="SelectedBookId" name="SelectedBookId" />

                    @* todo ONCLICK *@
                    <div class="d-flex justify-content-around mt-3">
                        <button type="submit" name="Status" value="Read" class="btn btn-outline-danger" onclick="setBookId(event)">
                            ❤️ Read
                        </button>
                        <button type="submit" name="Status" value="WantToRead" class="btn btn-outline-success" onclick="setBookId(event)">
                            ➕ Want to Read
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Adding a New Book -->
<div class="modal fade" id="addBookModal" tabindex="-1" aria-labelledby="addBookModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addBookModalLabel">Add New Book</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <!-- Book Name -->
                    <div class="form-group">
                        <label asp-for="NewBook.Name" class="control-label">Book Name</label>
                        <input asp-for="NewBook.Name" class="form-control" />
                        <span asp-validation-for="NewBook.Name" class="text-danger"></span>
                    </div>

                    <!-- Select Authors -->
                    <div class="form-group mt-3">
                        <label for="SelectedAuthorIds" class="control-label">Authors</label>
                        <select id="SelectedAuthorIds" name="SelectedAuthorIds" class="form-control" multiple>
                            @foreach (var author in Model.Authors)
                            {
                                <option value="@author.Id">
                                    @($"{author.FirstName} {author.LastName}")
                                </option>
                            }
                        </select>
                        <small class="text-muted">Hold Ctrl (Cmd on Mac) to select multiple authors.</small>
                    </div>

                    <!-- Select Genres -->
                    <div class="form-group mt-3">
                        <label for="SelectedGenreIds" class="control-label">Genres</label>
                        <select id="SelectedGenreIds" name="SelectedGenreIds" class="form-control" multiple>
                            @foreach (var genre in Model.Genres)
                            {
                                <option value="@genre.Id">
                                    @genre.GenreName
                                </option>
                            }
                        </select>
                        <small class="text-muted">Hold Ctrl (Cmd on Mac) to select multiple genres.</small>
                    </div>

                    <!-- Submit Button -->
                    <div class="form-group mt-3">
                        <input type="submit" value="Add Book" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@await Html.PartialAsync("_NotificationToastPartial")

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
         function showNotification(message, type) {
                const toastElement = document.getElementById('notificationToast');
                const toastBody = document.querySelector('#notificationToast .toast-body');

                // Remove existing background classes
                toastElement.classList.remove('text-bg-success', 'text-bg-danger');

                // Set the message and background color
                toastBody.innerText = message;
                if (type === 'success') {
                    toastElement.classList.add('text-bg-success');
                } else if (type === 'error') {
                    toastElement.classList.add('text-bg-danger');
                }

                // Display the toast
                const toast = new bootstrap.Toast(toastElement);
                toastElement.style.display = 'block';
                toast.show();
            }

            // Trigger notification if TempData contains a message
            document.addEventListener("DOMContentLoaded", function () {
                const successMessage = "@TempData["SuccessMessage"]";
                const errorMessage = "@TempData["ErrorMessage"]";

            if (successMessage) {
                showNotification(successMessage, 'success');
            } else if (errorMessage) {
                showNotification(errorMessage, 'error');
            }
        });

         function loadBookDetails(bookId, bookName) {
            document.getElementById("modalBookTitle").innerText = bookName;
            document.getElementById("SelectedBookId").value = bookId;
            document.getElementById("modalBookAuthors").innerText = "Loading...";

            fetch(`?handler=Authors&bookId=${bookId}`)
                .then(response => response.json())
                .then(authors => {
                    document.getElementById("modalBookAuthors").innerText = authors.map(a => a.firstName + " " + a.lastName).join(", ");
                })
                .catch(error => {
                    document.getElementById("modalBookAuthors").innerText = "Error loading authors.";
                });
        }
    </script>
}